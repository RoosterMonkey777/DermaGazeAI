type UserProfile @model @auth(rules: [{ allow: public }]) {
  id: ID!
  firstname: String!
  lastname: String!
  email: String! @index(name: "byEmail", queryField: "getUserByEmail")
  age: Int
  gender: String
  consentGiven: Boolean! # Flag to track ToS acceptance

  # Updated fields for skincare preferences
  skintype: String
  productType: String  # Change this field name to match SkinCareProduct
  skinProblems: [String]
  notableEffects: [String]

  # Field to store recommended product names (as a list of strings)
  recommendedProducts: [String]

  medications: [UserMedication] @hasMany(indexName: "byUserProfile", fields: ["id"])

}

type Medication @model @auth(rules: [{ allow: public }]) {
  id: ID!
  drug_code: Int!
  drug_identification_number: String! @index(name: "byDIN", queryField: "getMedicationByDIN")
  brand_name: String!
  class_name: String
  company_name: String
  last_update_date: String
  number_of_ais: String
  ai_group_no: String
  descriptor: String
}

#type UserMedication @model @auth(rules: [{ allow: public }]) {
#  id: ID!
#  userProfileID: ID! @index(name: "byUserProfile", queryField: "getUserMedicationsByUser")
#  medicationID: ID! @index(name: "byMedication", queryField: "getUserMedicationsByMedication")
#
#  dosage: String!
#  form: String!
#  startDate: String!
#  endDate: String!
#  daysOfWeek: [String]!
#  time: String!
#  additionalNotes: String
#}

type UserMedication @model @auth(rules: [{ allow: public }]) {
  id: ID!
  userProfileID: ID! @index(name: "byUserProfile", queryField: "getUserMedicationsByUser")
  medicationID: ID! @index(name: "byMedication", queryField: "getUserMedicationsByMedication")
  medicationName: String! # Store medication name directly
  companyName: String! # Store company name directly
  dosage: String! # Dosage information
  form: String!
  startDate: String # Optional start date
  endDate: String # Optional end date
  daysOfWeek: [String] # Optional, days of the week
  time: String # Optional time
}








type SkinCareProduct @model  @auth(rules: [{ allow: public }]){
  id: ID!
  productName: String!
  brand: String
  description: String
  labels: Int
  notableEffects: [String]
  pictureSrc: String
  price: String
  productHref: String
  productType: String
  skintype: [String]
  skinTypes: [String]
}


type Mutation {
  generateRecommendations(id: ID!): [String]
  @function(name: "SkincareRecommenderFunction-dev")
}
